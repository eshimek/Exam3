binwidth = 1) +
labs(x="Rating",
y="Frequency") +
xlim(0, 10) + scale_x_continuous(
breaks = (1:10),
limits = (1:10)                            #set limits/dimensions of histogram
)
})
}
#execute the shiny app
shinyApp(ui = ui, server = server)
#execute the shiny app
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
rm(list=ls(all=TRUE))
#load libraries
library(rio)
library(tidyverse)
library(googlesheets4)
library(labelled)
library(data.table)
library(varhandle)
library(ggrepel)
library(geosphere)
library(rgeos)
library(viridis)
library(mapview)
library(rnaturalearth)
library(rnaturalearthdata)
library(devtools)
library(remotes)
library(raster)
library(sp)
library(sf)
library(Imap)
library(countrycode)
# need to install via github with devtoolds and remotes
library(rnaturalearthhires )     #devtools::install_github("ropensci/rnaturalearthhires", force = TRUE)
library(ggsflabel)
africa = ne_countries(continent = 'Europe',
scale = "large",
returnclass = "sf")
View(africa)
print(africa)
setwd("C:/Users/Evan/Downloads/Valuables/R/Data Science for the Social Sciences/Exam3/Geomapping")
#load world shapefile
world_borders <-st_read("C:/Users/Evan/Downloads/Valuables/R/Data Science for the Social Sciences/Exam3/Geomapping/World_Borders.shp")
borders <-st_transform(world_borders, "+proj=longlat +ellps=WGS84 +datum=WGS84")
rm(borders)
#load natural resources data
orig_nr = import("v11almost_newer_natural_resources.dta")
## create fake variable to summarize over
orig_nr$lat_long = orig_nr$latitude+orig_nr$longitude
## collapse by that variable
nr = orig_nr %>%
group_by(country, resource, latitude, longitude, continent, region_wb) %>% #character/string variables that are excluded
summarize(lat_long = mean(lat_long, na.rm=TRUE)) %>%                        # in group_by() is dropped automatically -- we dropped year
dplyr::select(-c(lat_long))                                                # drop the fake variable
##summarize created a new df that collapsed the original df into the mean value of the mines across years
#Let's drop some NA's
nr <-na.omit(nr, select=c("latitude","longitude","resource", "country","continent", "region_wb"))
#transform everything to sf format
nr_sf <-st_as_sf(nr,
coords =c("longitude", "latitude"),
crs = 4326,
agr = "constant")
itals
setnames(nr_sf, "resource", "Resource")
#put everything that's not oil, gold, or diamonds as "other"
final = transform(nr_sf,
Resource = factor(replace(as.character(Resource),
list =!Resource %in% c("oil","gold", "diamond"),
values = "other")))
#put back in sf format, cuz transform() took it out
final =st_sf(final)
#Now let's get a map of only africa
africa = ne_countries(continent = 'Africa',
scale = "large",
returnclass = "sf")
#now let's subset the nat resources data to Africa only
africa_data = subset(final, continent=="africa")
#ok now make a fancy map using shapes to represent resources; no theme
africa_map = ggplot()+
geom_sf(data = africa)+
geom_sf(data = africa_data, aes(shape=Resource))+
theme_void()+
scale_shape_manual(values=c("gold" = 11,
"diamond" = 5,
"oil" = 10,
"other" = 20))+
theme(legend.position = "right")
print(africa_map)
#download WDI data on female labor force participation
library(WDI)
FLFP = "SL.TLF.CACT.FE.NE.ZS"
female_lfp = WDI(country = "all",
indicator =c(FLFP),
start = 2010, end = 2015, extra = FALSE, cache = NULL)
View(female_lfp)
#rename the female labor force participation variable flfp
library(dplyr)
female_lfp = WDI(country = "all",
indicator =c("SL.TLF.CACT.FE.NE.ZS"),
start = 2010, end = 2015, extra = FALSE, cache = NULL)
#rename the female labor force participation variable flfp
library(dplyr)
rename(female_lf. SL.TLF.CACT.FE.NE.ZS = flfp)
rename(female_lf, SL.TLF.CACT.FE.NE.ZS = flfp)
rename(female_lfp, SL.TLF.CACT.FE.NE.ZS = flfp)
rename(female_lfp, flfp = SL.TLF.CACT.FE.NE.ZS)
View(female_lfp)
female_lfp = rename(female_lfp, flfp = SL.TLF.CACT.FE.NE.ZS)
View(female_lfp)
collapsed_flfp = female_lfp %>%
group_by(country) %>%
summarize(flfp = mean(flfp, na.rm=TRUE))
View(collapsed_flfp)
low_participation_countries = collapsed_flfp %>%
select(flfp < 15)
low_participation_countries = collapsed_flfp %>%
dplyr::select(flfp < 15)
low_participation_countries = collapsed_flfp %>%
dplyr::select('flfp'< 15)
low_participation_countries = collapsed_flfp %>%
dplyr::select(collapsed_flfp$flfp < 15)
collapsed_flfp$flfp = as.numeric(collapsed_flfp$flfp)
low_participation_countries = collapsed_flfp %>%
dplyr::select(collapsed_flfp$flfp < 15)
low_participation_countries = collapsed_flfp %>%
filter(collapsed_flfp$flfp < 15)
View(low_participation_countries)
world <-ne_countries(scale = "large", returnclass = "sf")
world <-ne_countries(scale = "large", returnclass = "sf")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = collapsed_flfp, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title =element_text(hjust = 0.5)) +
theme_void()
world <-ne_countries(scale = "large", returnclass = "sf")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = collapsed_flfp, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title =element_text(hjust = 0.5)) +
theme_void()
print(collapsed_flfp_map)
#6. map collapsed_flfp onto a world map, using viridis color scheme
library(sf)
world <-ne_countries(scale = "large", returnclass = "sf")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = collapsed_flfp, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(collapsed_flfp_map)
rm(list=ls(all=TRUE))
female_lfp = WDI(country = "all",
indicator =c("SL.TLF.CACT.FE.NE.ZS"),
start = 2010, end = 2015, extra = FALSE, cache = NULL)
#3. rename the female labor force participation variable flfp
library(dplyr)
female_lfp = rename(female_lfp, flfp = SL.TLF.CACT.FE.NE.ZS)
#4. collapse by mean flfp by country
View(female_lfp)
collapsed_flfp = female_lfp %>%
group_by(country, iso2c) %>%
summarize(flfp = mean(flfp, na.rm=TRUE))
View(collapsed_flfp)
collapsed_flfp$flfp = as.numeric(collapsed_flfp$flfp)
low_participation_countries = collapsed_flfp %>%
filter(collapsed_flfp$flfp < 15)
print(low_participation_countries)
collapsed_flfp$flfp = as.numeric(collapsed_flfp$flfp)
low_participation_countries = collapsed_flfp %>%
filter(collapsed_flfp$flfp < 15)
View(collapsed_flfp)
low_participation_countries = collapsed_flfp %>%
filter(collapsed_flfp$flfp < 15)
low_participation_countries = collapsed_flfp %>%
filter(flfp < 15)
View(low_participation_countries)
library(sf)
world <-ne_countries(scale = "large", returnclass = "sf")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = collapsed_flfp, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(collapsed_flfp_map)
View(world)
View(collapsed_flfp)
world = rename(world, iso2c = isoa2)
world = rename(world, iso2c = iso_a2)
merged_data = left_join(world, collapsed_flfp, by="iso2c")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = merged_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(collapsed_flfp_map)
view(collapsed_flfp_map)
print(collapsed_flfp_map)
ggsave(collapsed_flfp_map, filename = "collapsed_flfp_map", width = 6.5, height = 6)
rm(list=ls(all=TRUE))
#2. download WDI data on female labor force participation
library(WDI)
female_lfp = WDI(country = "all",
indicator =c("SL.TLF.CACT.FE.NE.ZS"),
start = 2010, end = 2015, extra = FALSE, cache = NULL)
#3. rename the female labor force participation variable flfp
library(dplyr)
female_lfp = rename(female_lfp, flfp = SL.TLF.CACT.FE.NE.ZS)
#4. collapse by mean flfp by country
collapsed_flfp = female_lfp %>%
group_by(country, iso2c) %>%
summarize(flfp = mean(flfp, na.rm=TRUE))
#5. show which countries have average female force participation rates
#for the 2010-2015 period that are less than 15%
collapsed_flfp$flfp = as.numeric(collapsed_flfp$flfp)
low_participation_countries = collapsed_flfp %>%
filter(flfp < 15)
print(low_participation_countries)
#6. map collapsed_flfp onto a world map, using viridis color scheme
library(sf)
world <-ne_countries(scale = "large", returnclass = "sf")
world = rename(world, iso2c = iso_a2)
merged_data = left_join(world, collapsed_flfp, by="iso2c")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = merged_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(collapsed_flfp_map)
rm(list=ls(all=TRUE))
#2. download WDI data on female labor force participation
library(WDI)
female_lfp = WDI(country = "all",
indicator =c("SL.TLF.CACT.FE.NE.ZS"),
start = 2010, end = 2015, extra = FALSE, cache = NULL)
#3. rename the female labor force participation variable flfp
library(dplyr)
female_lfp = rename(female_lfp, flfp = SL.TLF.CACT.FE.NE.ZS)
#4. collapse by mean flfp by country
collapsed_flfp = female_lfp %>%
group_by(country, iso2c) %>%
summarize(flfp = mean(flfp, na.rm=TRUE))
#5. show which countries have average female force participation rates
#for the 2010-2015 period that are less than 15%
collapsed_flfp$flfp = as.numeric(collapsed_flfp$flfp)
low_participation_countries = collapsed_flfp %>%
filter(flfp < 15)
print(low_participation_countries)
#6. map collapsed_flfp onto a world map, using viridis color scheme
library(sf)
world <-ne_countries(scale = "large", returnclass = "sf")
world = rename(world, iso2c = iso_a2)
merged_data = left_join(world, collapsed_flfp, by="iso2c")
collapsed_flfp_map = ggplot() +
geom_sf(data = world) +
geom_sf(data = merged_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("World Female Labor Participation, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(collapsed_flfp_map)
ggsave(collapsed_flfp_map, filename = "collapsed_flfp_map", width = 6.5, height = 6)
africa = ne_countries(continent = 'Africa',
scale = "large",
returnclass = "sf")
africa = ne_countries(continent = 'Africa',
scale = "large",
returnclass = "sf")
africa = ne_countries(continent = 'Africa',
scale = "large",
returnclass = "sf")
africa_flfp_map = ggplot() +
geom_sf(data = africa) +
geom_sf(data = merged_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("Female Labor Participation in Africa, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(africa_flfp_map)
print(africa)
View(merged_data)
View(merged_data)
merged_data = rename(merged_data, sovereignt = Country)
merged_data = rename(merged_data, country = sovereignt)
female_lfp = WDI(country = "all",
indicator =c("SL.TLF.CACT.FE.NE.ZS"),
start = 2010, end = 2015, extra = FALSE, cache = NULL)
#3. rename the female labor force participation variable flfp
library(dplyr)
female_lfp = rename(female_lfp, flfp = SL.TLF.CACT.FE.NE.ZS)
#4. collapse by mean flfp by country
collapsed_flfp = female_lfp %>%
group_by(country, iso2c) %>%
summarize(flfp = mean(flfp, na.rm=TRUE))
#5. show which countries have average female force participation rates
#for the 2010-2015 period that are less than 15%
collapsed_flfp$flfp = as.numeric(collapsed_flfp$flfp)
low_participation_countries = collapsed_flfp %>%
filter(flfp < 15)
print(low_participation_countries)
#6. map collapsed_flfp onto a world map, using viridis color scheme
library(sf)
world <-ne_countries(scale = "large", returnclass = "sf")
world = rename(world, iso2c = iso_a2)
merged_data = left_join(world, collapsed_flfp, by="iso2c")
africa = ne_countries(continent = 'Africa',
scale = "large",
returnclass = "sf")
merged_data = rename(merged_data, country = sovereignt)
View(merged_data)
setnames(merged_data, "sovereignt", "country")
View(merged_data)
africa_only_data <-subset(merged_data, country=="Tanzania"|
country=="Democratic Republic of Congo"|country=="Angola"|
country=="Mozambique"|country=="Malawi"|country=="Zambia"|
country=="Madagascar"|country=="Zimbabwe"|country=="Eswatini"|
country=="Namibia"|country=="Botswana" )
africa_flfp_map = ggplot() +
geom_sf(data = africa) +
geom_sf(data = africa_only_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("Female Labor Participation in Africa, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(africa_flfp_map)
africa_only_data <-subset(merged_data, country=="Tanzania"|
country=="Democratic Republic of Congo"|country=="Angola"|
country=="Mozambique"|country=="Malawi"|country=="Zambia"|
country=="Madagascar"|country=="Zimbabwe"|country=="Eswatini"|
country=="Namibia"|country=="Botswana"| country=="South Africa"|
country=="Kenya"|country=="Uganda"|country=="Tanzania")
africa_flfp_map = ggplot() +
geom_sf(data = africa) +
geom_sf(data = africa_only_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("Female Labor Participation in Africa, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(africa_flfp_map)
africa_only_data <-subset(merged_data, country=="United Republic of Tanzania"|
country=="Democratic Republic of Congo"|country=="Angola"|
country=="Mozambique"|country=="Malawi"|country=="Zambia"|
country=="Madagascar"|country=="Zimbabwe"|country=="Eswatini"|
country=="Namibia"|country=="Botswana"| country=="South Africa"|
country=="Kenya"|country=="Uganda")
africa_flfp_map = ggplot() +
geom_sf(data = africa) +
geom_sf(data = africa_only_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("Female Labor Participation in Africa, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(africa_flfp_map)
africa_only_data <-subset(merged_data, country=="United Republic of Tanzania"|
country=="Democratic Republic of the Congo"|country=="Angola"|
country=="Mozambique"|country=="Malawi"|country=="Zambia"|
country=="Madagascar"|country=="Zimbabwe"|country=="Eswatini"|
country=="Namibia"|country=="Botswana"| country=="South Africa"|
country=="Republic of the Congo")
africa_flfp_map = ggplot() +
geom_sf(data = africa) +
geom_sf(data = africa_only_data, aes(fill=`flfp`)) +
scale_fill_viridis(option = "viridis") +
ggtitle("Female Labor Participation in Africa, in Percent") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_void()
print(africa_flfp_map)
source('C:/Users/Evan/Downloads/Valuables/R/Data Science for the Social Sciences/Exam3/Exam3Script.R', echo=TRUE)
mytext = pdf_text(pdf = "https://pdf.usaid.gov/pdf_docs/PA00TNMJ.pdf")
library(pdftools)
mytext = pdf_text(pdf = "https://pdf.usaid.gov/pdf_docs/PA00TNMJ.pdf")
armeniatext = as.data.frame(mytext)
armeniatext = armeniatext %>%
unnest_tokens(word, text)
data("stop_words")
armeniatext = armeniatext %>%
anti_join(stop_words)
#12. Tokenize by word, removing stop words
library(tidytext)
library(stringr)
library(tidyr)
armeniatext = armeniatext %>%
unnest_tokens(word, text)
data("stop_words")
armeniatext = armeniatext %>%
anti_join(stop_words)
View(armeniatext)
ibrary(pdftools)
mytext = pdf_text(pdf = "https://pdf.usaid.gov/pdf_docs/PA00TNMJ.pdf")
#11. Convert pdf to data frame
armeniatext = as.data.frame(mytext)
#12. Tokenize by word, removing stop words
library(tidytext)
library(stringr)
library(tidyr)
armeniatext = armeniatext %>%
unnest_tokens(word, text)
View(armeniatext)
mytext = pdf_text(pdf = "https://pdf.usaid.gov/pdf_docs/PA00TNMJ.pdf")
armeniatext = as.data.frame(mytext)
armeniatext = armeniatext %>%
unnest_tokens(word, mytext)
data("stop_words")
armeniatext = armeniatext %>%
anti_join(stop_words)
View(armeniatext)
armeniatext %>%
count(word, sort=T)
most_used = armeniatext %>%
count(word, sort=T)
print(most_used[1:10])
View(most_used)
print(most_used[r = 1:10])
most_used = armeniatext %>%
count(word, sort=T)
print(most_used[1:10,])
hot100exam = rvest::read_html("https://www.billboard.com/charts/hot-100")
mytext = pdf_text(pdf = "https://pdf.usaid.gov/pdf_docs/PA00TNMJ.pdf")
#11. Convert pdf to data frame
armeniatext = as.data.frame(mytext, stringsAsFactors=FALSE)
armeniatext = armeniatext %>%
unnest_tokens(word, mytext)
data("stop_words")
armeniatext = armeniatext %>%
anti_join(stop_words)
#13. Figure out the top 5 most used words
most_used = armeniatext %>%
count(word, sort=T)
print(most_used[1:10,])
body_nodes = hot100 %>%
html_node() %>%
html_children()
#15. Identify all nodes
body_nodes = hot100 %>%
rvest::html_node() %>%
rvest::html_children()
Identify all nodes
body_nodes = hot100exam %>%
rvest::html_node() %>%
rvest::html_children()
hot100exam = rvest::read_html("https://www.billboard.com/charts/hot-100")
#15. Identify all nodes
body_nodes = hot100exam %>%
rvest::html_node() %>%
rvest::html_children()
des
body_nodes = hot100exam %>%
rvest::html_node("html") %>%
rvest::html_children()
View(body_nodes)
hot100exam = rvest::read_html("https://www.billboard.com/charts/hot-100")
#15. Identify all nodes
body_nodes = hot100exam %>%
rvest::html_node("body") %>%
rvest::html_children()
View(body_nodes)
View(body_nodes)
rank = hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__rank__number')]") %>%
rvest::html_text()
artist <-hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__information__artist')]") %>%
rvest::html_text()
title <-hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__information__song')]") %>%
rvest::html_text()
last_week <-hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__meta text--center color--secondary text--last')]") %>%
rvest::html_text()
rank = hot100exam %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__rank__number')]") %>%
rvest::html_text()
artist <-hot100exam %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__information__artist')]") %>%
rvest::html_text()
title <-hot100exam %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__information__song')]") %>%
rvest::html_text()
last_week <-hot100exam %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class,
'chart-element__meta text--center color--secondary text--last')]") %>%
rvest::html_text()
